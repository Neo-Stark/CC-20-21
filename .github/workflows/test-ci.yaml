name: "Comprueba el estado de la IC"
on:
  push:
    paths:
      - "proyectos/[4567].md"

jobs:
  CI_status_check:
    runs-on: ubuntu-latest
    steps:
      - name: Extrae URL del repositorio
        uses: JJ/github-pr-contains-action@releases/v2
        with:
          github-token: ${{github.token}}
          filesChanged: 1
      - name: Comprueba los checks del repositorio
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const diff = process.env.diff;
            const ghRepoMatch = /github.com\/(\S+)\/(.+?)(:\s+|\))/.exec(diff)
            if  ( ghRepoMatch === null ) {
                core.setFailed("‚ùå No hay ning√∫n URL de un repositorio con el formato requerido en el diff")
            } else {
                const user = ghRepoMatch[1] // segundo resultado
                const repo = ghRepoMatch[2] // tercer resultado
                console.log( "¬ª Analizando repo " + repo + " del usuario üî•" + user )
                const checks_before_pag =
                    await github.checks.listForRef.endpoint.merge(
                        { owner: user,
                          repo: repo,
                          ref: 'HEAD',
                          status: 'completed'
                        })
                const checks = await github.paginate( checks_before_pag)
                console.log( "‚úÖ Hay " + checks.length + " sistemas de CI configurados")

                if ( checks.length < 1 ) {
                    core.setFailed("‚ùå No hay suficientes sistemas de CI configurados")
                }
                const green_checks = checks.filter( check => check.conclusion === "success" )
                if ( !green_checks.length ) {
                    core.setFailed("‚ùå No hay al menos un CI que est√© en verde")
                } else {
                    console.log( "‚úÖ Hay " + green_checks.length + " que pasa(n) los tests correctamente" )
                }
                const travis_checks_green = green_checks.filter( check => check.app.slug === "travis-ci" )

                if ( travis_checks_green.length == 0 ) {
                    core.setFailed("‚ùå Travis no est√° o est√° fallando en este momento")
                } else {
                    console.log( "‚úÖ Entre ellos est√° Travis" )
                }
            }
