name: "Comprueba cómo se han cerrado los issues"
on:
  push:
    paths:
      - "proyectos/[1234567].md"

jobs:
  closing_issue_check:
    runs-on: ubuntu-latest
    steps:
      - name: Extrae URL del repositorio
        uses: JJ/github-pr-contains-action@releases/v2
        with:
          github-token: ${{github.token}}
          filesChanged: 1
      - name: Busca eventos de cierre
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const diff = process.env.diff;
            const ghRepoMatch = /github.com\/(\S+)\/(.+?)(:\s+|\))/.exec(diff)
            if  ( ghRepoMatch === null ) {
                core.setFailed("❌ No hay ningún URL de un repositorio con el formato requerido")
            } else {
                const user = ghRepoMatch[1] // segundo resultado
                const repo = ghRepoMatch[2] // tercer resultado
                console.log( "» Analizando repo " + repo + " del usuario " + user )
                const non_paginated_issues = await github.issues.listForRepo.endpoint.merge( { owner: user,
                                                                                               repo: repo,
                                                                                               state: "closed" } )
                const issues = await github.paginate( non_paginated_issues )
                issues.forEach( async function( issue ) {
                    if ( ! issue.push ) {
                        const query = `query($owner:String!, $name:String!, $issue:Int!) {
                            repository(name: $name , owner: $owner  ) {
                              issue(number: $issue) {
                                timelineItems(itemTypes: CLOSED_EVENT, last: 1) {
                                  nodes {
                                    ... on ClosedEvent {
                                      closer {
                                        __typename 
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }`;

                        const variables = {
                          owner: user,
                          name: repo,
                          issue: issue.number
                        }
                        const result = await github.graphql(query, variables)
                        if ( result.repository.issue.timelineItems.nodes[0].closer != null ) {
                            const closingEvent = result.repository.issue.timelineItems.nodes[0].closer.__typename
                            if ( (closingEvent == 'Commit') || (closingEvent == 'PullRequest') ) {
                                console.log(" ✅ El issue " + issue.number + " se cerró con un " + closingEvent )
                            } else {
                                core.setFailed( "❌ El issue " + issue.number + " no se cerró con un commit o PR")
                            }
                        } else {
                          console.log( "❌ El issue " + issue.number + " no está cerrado aunque aparece en la lista de tales " )
                        }
                  }
                })

            }
